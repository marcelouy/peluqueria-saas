// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PeluqueriaSaaS.Infrastructure.Data;

#nullable disable

namespace PeluqueriaSaaS.Infrastructure.Migrations
{
    [DbContext(typeof(PeluqueriaDbContext))]
    [Migration("20250727215246_AddSettingsOnly")]
    partial class AddSettingsOnly
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Cita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ActualizadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ClienteId1")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmpleadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("EmpleadoId1")
                        .HasColumnType("int");

                    b.Property<Guid>("EstadoCitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EstadoCitaId1")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotasCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotasInternas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SucursalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SucursalId1")
                        .HasColumnType("int");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId1");

                    b.HasIndex("EmpleadoId1");

                    b.HasIndex("EstadoCitaId1");

                    b.HasIndex("SucursalId1");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.CitaEstacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ActualizadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CitaId1")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsActiva")
                        .HasColumnType("bit");

                    b.Property<Guid>("EstacionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EstacionId1")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CitaId1");

                    b.HasIndex("EstacionId1");

                    b.ToTable("CitaEstacion");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.CitaServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ActualizadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CitaId1")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DuracionMinutos")
                        .HasColumnType("int");

                    b.Property<Guid?>("EmpleadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("EmpleadoId1")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HoraFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HoraInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<Guid>("ServicioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ServicioId1")
                        .HasColumnType("int");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CitaId1");

                    b.HasIndex("EmpleadoId1");

                    b.HasIndex("ServicioId1");

                    b.ToTable("CitaServicios");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ActualizadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Configuration.EstadoCita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ActualizadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("EsEstadoFinal")
                        .HasColumnType("bit");

                    b.Property<bool>("EsEstadoInicial")
                        .HasColumnType("bit");

                    b.Property<bool>("EsPorDefecto")
                        .HasColumnType("bit");

                    b.Property<bool>("EsSistema")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NotificarCliente")
                        .HasColumnType("bit");

                    b.Property<bool>("NotificarEmpleado")
                        .HasColumnType("bit");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<bool>("PermiteCancelacion")
                        .HasColumnType("bit");

                    b.Property<bool>("PermiteModificacion")
                        .HasColumnType("bit");

                    b.Property<bool>("RequiereConfirmacion")
                        .HasColumnType("bit");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstadoCita");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Configuration.TipoEstacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ActualizadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CapacidadMaxima")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipoRequerido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("EsMovil")
                        .HasColumnType("bit");

                    b.Property<bool>("EsPorDefecto")
                        .HasColumnType("bit");

                    b.Property<bool>("EsSistema")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<bool>("RequiereEquipoEspecial")
                        .HasColumnType("bit");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TiempoLimpiezaMinutos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TipoEstacion");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Configuration.TipoServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ActualizadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DuracionEstimadaMinutos")
                        .HasColumnType("int");

                    b.Property<bool>("EsActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("EsPorDefecto")
                        .HasColumnType("bit");

                    b.Property<bool>("EsSistema")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<bool>("PermiteDescuentos")
                        .HasColumnType("bit");

                    b.Property<decimal>("PrecioBase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("RequiereEspecialista")
                        .HasColumnType("bit");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("TiempoPreparacionMinutos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Nombre")
                        .IsUnique();

                    b.ToTable("TiposServicio");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaContratacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Horario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Salario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SucursalId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SucursalId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.EmpleadoBasico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaContratacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Salario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmpleadosBasicos");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ActualizadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiasAnticipacionMaxima")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsActiva")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVencimientoSuscripcion")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("HorarioAperturaDefecto")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HorarioCierreDefecto")
                        .HasColumnType("time");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PermiteReservaOnline")
                        .HasColumnType("bit");

                    b.Property<string>("PlanSuscripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RUT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SitioWeb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TiempoSlotMinutos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Estacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ActualizadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsActiva")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SucursalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SucursalId1")
                        .HasColumnType("int");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TipoEstacionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoEstacionId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SucursalId1");

                    b.HasIndex("TipoEstacionId1");

                    b.ToTable("Estaciones");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.HistorialCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ActualizadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CitaId1")
                        .HasColumnType("int");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ClienteId1")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Evento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CitaId1");

                    b.HasIndex("ClienteId1");

                    b.ToTable("HistorialCliente");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ActualizadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DuracionMinutos")
                        .HasColumnType("int");

                    b.Property<bool>("EsActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("FechaActualizacion")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TipoServicioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoServicioId");

                    b.HasIndex("TenantId", "EsActivo");

                    b.HasIndex("TenantId", "Nombre")
                        .IsUnique();

                    b.HasIndex("TenantId", "TipoServicioId");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Settings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("BackupAutomatico")
                        .HasColumnType("bit");

                    b.Property<string>("CodigoPeluqueria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ColorPrimario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ColorSecundario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DiasRetencionVentas")
                        .HasColumnType("int");

                    b.Property<string>("DireccionPeluqueria")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmailPeluqueria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("FormatoMoneda")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("MostrarDatosCliente")
                        .HasColumnType("bit");

                    b.Property<bool>("MostrarDetalleServicios")
                        .HasColumnType("bit");

                    b.Property<bool>("MostrarEmpleadoServicio")
                        .HasColumnType("bit");

                    b.Property<bool>("MostrarFechaHora")
                        .HasColumnType("bit");

                    b.Property<bool>("MostrarLogoEnResumen")
                        .HasColumnType("bit");

                    b.Property<bool>("MostrarTotalServicio")
                        .HasColumnType("bit");

                    b.Property<string>("NombrePeluqueria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("NotificacionesEmail")
                        .HasColumnType("bit");

                    b.Property<string>("ResumenEncabezado")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ResumenPiePagina")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("ResumenServicioHabilitado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("RutaLogo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SimboloMoneda")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TamanoFuente")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TelefonoPeluqueria")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TemplateCustomHTML")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("UsarTemplateCustom")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CodigoPeluqueria")
                        .IsUnique();

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Sucursal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ActualizadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmpresaId1")
                        .HasColumnType("int");

                    b.Property<bool>("EsActiva")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId1");

                    b.ToTable("Sucursales");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Venta", b =>
                {
                    b.Property<int>("VentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VentaId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<bool>("EsActivo")
                        .HasColumnType("bit");

                    b.Property<string>("EstadoVenta")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroVenta")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("VentaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("NumeroVenta")
                        .IsUnique();

                    b.HasIndex("FechaVenta", "TenantId");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.VentaDetalle", b =>
                {
                    b.Property<int>("VentaDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VentaDetalleId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("EmpleadoServicioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreServicio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NotasServicio")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VentaId")
                        .HasColumnType("int");

                    b.HasKey("VentaDetalleId");

                    b.HasIndex("EmpleadoServicioId");

                    b.HasIndex("ServicioId");

                    b.HasIndex("VentaId");

                    b.ToTable("VentaDetalles");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Cita", b =>
                {
                    b.HasOne("PeluqueriaSaaS.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Citas")
                        .HasForeignKey("ClienteId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PeluqueriaSaaS.Domain.Entities.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId1");

                    b.HasOne("PeluqueriaSaaS.Domain.Entities.Configuration.EstadoCita", "EstadoCita")
                        .WithMany()
                        .HasForeignKey("EstadoCitaId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PeluqueriaSaaS.Domain.Entities.Sucursal", "Sucursal")
                        .WithMany()
                        .HasForeignKey("SucursalId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PeluqueriaSaaS.Domain.ValueObjects.Dinero", "MontoPagado", b1 =>
                        {
                            b1.Property<int>("CitaId")
                                .HasColumnType("int");

                            b1.Property<string>("Moneda")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)")
                                .HasDefaultValue("CLP")
                                .HasColumnName("MonedaPago");

                            b1.Property<decimal>("Valor")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("MontoPagado");

                            b1.HasKey("CitaId");

                            b1.ToTable("Citas");

                            b1.WithOwner()
                                .HasForeignKey("CitaId");
                        });

                    b.OwnsOne("PeluqueriaSaaS.Domain.ValueObjects.Dinero", "MontoTotal", b1 =>
                        {
                            b1.Property<int>("CitaId")
                                .HasColumnType("int");

                            b1.Property<string>("Moneda")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)")
                                .HasDefaultValue("CLP")
                                .HasColumnName("MonedaTotal");

                            b1.Property<decimal>("Valor")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("MontoTotal");

                            b1.HasKey("CitaId");

                            b1.ToTable("Citas");

                            b1.WithOwner()
                                .HasForeignKey("CitaId");
                        });

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");

                    b.Navigation("EstadoCita");

                    b.Navigation("MontoPagado")
                        .IsRequired();

                    b.Navigation("MontoTotal")
                        .IsRequired();

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.CitaEstacion", b =>
                {
                    b.HasOne("PeluqueriaSaaS.Domain.Entities.Cita", "Cita")
                        .WithMany("Estaciones")
                        .HasForeignKey("CitaId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PeluqueriaSaaS.Domain.Entities.Estacion", "Estacion")
                        .WithMany()
                        .HasForeignKey("EstacionId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cita");

                    b.Navigation("Estacion");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.CitaServicio", b =>
                {
                    b.HasOne("PeluqueriaSaaS.Domain.Entities.Cita", "Cita")
                        .WithMany("Servicios")
                        .HasForeignKey("CitaId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PeluqueriaSaaS.Domain.Entities.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId1");

                    b.HasOne("PeluqueriaSaaS.Domain.Entities.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PeluqueriaSaaS.Domain.ValueObjects.Dinero", "PrecioFinal", b1 =>
                        {
                            b1.Property<int>("CitaServicioId")
                                .HasColumnType("int");

                            b1.Property<string>("Moneda")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)")
                                .HasDefaultValue("CLP")
                                .HasColumnName("MonedaServicio");

                            b1.Property<decimal>("Valor")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("PrecioFinal");

                            b1.HasKey("CitaServicioId");

                            b1.ToTable("CitaServicios");

                            b1.WithOwner()
                                .HasForeignKey("CitaServicioId");
                        });

                    b.Navigation("Cita");

                    b.Navigation("Empleado");

                    b.Navigation("PrecioFinal")
                        .IsRequired();

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Empleado", b =>
                {
                    b.HasOne("PeluqueriaSaaS.Domain.Entities.Sucursal", null)
                        .WithMany("Empleados")
                        .HasForeignKey("SucursalId");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Estacion", b =>
                {
                    b.HasOne("PeluqueriaSaaS.Domain.Entities.Sucursal", "Sucursal")
                        .WithMany("Estaciones")
                        .HasForeignKey("SucursalId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PeluqueriaSaaS.Domain.Entities.Configuration.TipoEstacion", "TipoEstacion")
                        .WithMany()
                        .HasForeignKey("TipoEstacionId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sucursal");

                    b.Navigation("TipoEstacion");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.HistorialCliente", b =>
                {
                    b.HasOne("PeluqueriaSaaS.Domain.Entities.Cita", "Cita")
                        .WithMany()
                        .HasForeignKey("CitaId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PeluqueriaSaaS.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Historial")
                        .HasForeignKey("ClienteId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cita");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Servicio", b =>
                {
                    b.HasOne("PeluqueriaSaaS.Domain.Entities.Configuration.TipoServicio", "TipoServicio")
                        .WithMany()
                        .HasForeignKey("TipoServicioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("PeluqueriaSaaS.Domain.ValueObjects.Dinero", "Precio", b1 =>
                        {
                            b1.Property<int>("ServicioId")
                                .HasColumnType("int");

                            b1.Property<string>("Moneda")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)")
                                .HasDefaultValue("CLP")
                                .HasColumnName("Moneda");

                            b1.Property<decimal>("Valor")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Precio");

                            b1.HasKey("ServicioId");

                            b1.ToTable("Servicios");

                            b1.WithOwner()
                                .HasForeignKey("ServicioId");
                        });

                    b.Navigation("Precio")
                        .IsRequired();

                    b.Navigation("TipoServicio");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Sucursal", b =>
                {
                    b.HasOne("PeluqueriaSaaS.Domain.Entities.Empresa", "Empresa")
                        .WithMany("Sucursales")
                        .HasForeignKey("EmpresaId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Venta", b =>
                {
                    b.HasOne("PeluqueriaSaaS.Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PeluqueriaSaaS.Domain.Entities.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.VentaDetalle", b =>
                {
                    b.HasOne("PeluqueriaSaaS.Domain.Entities.Empleado", "EmpleadoServicio")
                        .WithMany()
                        .HasForeignKey("EmpleadoServicioId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PeluqueriaSaaS.Domain.Entities.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PeluqueriaSaaS.Domain.Entities.Venta", "Venta")
                        .WithMany("VentaDetalles")
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpleadoServicio");

                    b.Navigation("Servicio");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Cita", b =>
                {
                    b.Navigation("Estaciones");

                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Citas");

                    b.Navigation("Historial");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Empresa", b =>
                {
                    b.Navigation("Sucursales");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Sucursal", b =>
                {
                    b.Navigation("Empleados");

                    b.Navigation("Estaciones");
                });

            modelBuilder.Entity("PeluqueriaSaaS.Domain.Entities.Venta", b =>
                {
                    b.Navigation("VentaDetalles");
                });
#pragma warning restore 612, 618
        }
    }
}
