@*
    Archivo: src/PeluqueriaSaaS.Web/Views/Servicios/Create.cshtml
    Propósito: Formulario para crear nuevo servicio - CON VALIDACION JAVASCRIPT
    Fecha: Julio 2025
*@

@model PeluqueriaSaaS.Application.DTOs.ServicioCreateDto
@{
    ViewData["Title"] = "Crear Nuevo Servicio";
}

<!-- Header de la página -->
<div class="page-header">
    <div class="container">
        <h1 class="page-title">
            <i class="fas fa-plus-circle me-3"></i>
            Crear Nuevo Servicio
        </h1>
        <p class="page-subtitle">
            Añade un nuevo servicio a tu catálogo de peluquería
        </p>
    </div>
</div>

<div class="container">
    <!-- Navegación breadcrumb -->
    <nav aria-label="breadcrumb" class="fade-in">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index")" class="text-decoration-none">
                    <i class="fas fa-scissors me-1"></i>
                    Servicios
                </a>
            </li>
            <li class="breadcrumb-item active">
                <i class="fas fa-plus me-1"></i>
                Crear Nuevo
            </li>
        </ol>
    </nav>

    <!-- Formulario principal -->
    <div class="card fade-in">
        <div class="card-header">
            <h5 class="mb-0">
                <i class="fas fa-form me-2"></i>
                Información del Servicio
            </h5>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Create", "Servicios", FormMethod.Post, new { @class = "needs-validation", @novalidate = "novalidate" }))
            {
                @Html.AntiForgeryToken()
                
                <!-- Mensajes de validación generales -->
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        <strong>Por favor corrige los siguientes errores:</strong>
                        <ul class="mb-0 mt-2">
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <li>@error.ErrorMessage</li>
                            }
                        </ul>
                    </div>
                }

                <div class="row">
                    <!-- Nombre del Servicio -->
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Nombre, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Nombre, new { 
                                @class = "form-control " + (Html.ViewData.ModelState["Nombre"]?.Errors.Count > 0 ? "is-invalid" : ""),
                                @placeholder = "Ej: Corte de cabello clásico",
                                @maxlength = "100",
                                @required = "required"
                            })
                            <div id="nombre-feedback"></div>
                            @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "invalid-feedback" })
                        </div>
                    </div>

                    <!-- Tipo de Servicio -->
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.TipoServicioId, new { @class = "form-label" })
                            @Html.DropDownListFor(m => m.TipoServicioId, ViewBag.TipoServicioId as SelectList, 
                                "-- Seleccione un tipo --", new { 
                                @class = "form-control " + (Html.ViewData.ModelState["TipoServicioId"]?.Errors.Count > 0 ? "is-invalid" : ""),
                                @required = "required"
                            })
                            @Html.ValidationMessageFor(m => m.TipoServicioId, "", new { @class = "invalid-feedback" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <!-- Precio -->
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Precio, new { @class = "form-label" })
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                @Html.TextBoxFor(m => m.Precio, new { 
                                    @class = "form-control " + (Html.ViewData.ModelState["Precio"]?.Errors.Count > 0 ? "is-invalid" : ""),
                                    @type = "number",
                                    @step = "0.01",
                                    @min = "0.01",
                                    @max = "999999.99",
                                    @placeholder = "0.00",
                                    @required = "required"
                                })
                                @Html.ValidationMessageFor(m => m.Precio, "", new { @class = "invalid-feedback" })
                            </div>
                            <div id="precio-feedback"></div>
                        </div>
                    </div>

                    <!-- Moneda -->
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.MonedaCodigo, new { @class = "form-label" })
                            @Html.DropDownListFor(m => m.MonedaCodigo, new List<SelectListItem>
                            {
                                new SelectListItem { Text = "Pesos Uruguayos (UYU)", Value = "UYU", Selected = true },
                                new SelectListItem { Text = "Dólares (USD)", Value = "USD" },
                                new SelectListItem { Text = "Euros (EUR)", Value = "EUR" }
                            }, new { 
                                @class = "form-control " + (Html.ViewData.ModelState["MonedaCodigo"]?.Errors.Count > 0 ? "is-invalid" : ""),
                                @required = "required"
                            })
                            @Html.ValidationMessageFor(m => m.MonedaCodigo, "", new { @class = "invalid-feedback" })
                        </div>
                    </div>

                    <!-- Duración -->
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.DuracionMinutos, new { @class = "form-label" })
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.DuracionMinutos, new { 
                                    @class = "form-control " + (Html.ViewData.ModelState["DuracionMinutos"]?.Errors.Count > 0 ? "is-invalid" : ""),
                                    @type = "number",
                                    @min = "1",
                                    @max = "1440",
                                    @placeholder = "30",
                                    @required = "required"
                                })
                                <span class="input-group-text">min</span>
                                @Html.ValidationMessageFor(m => m.DuracionMinutos, "", new { @class = "invalid-feedback" })
                            </div>
                            <div id="duracion-feedback"></div>
                            <small class="form-text text-muted">
                                <i class="fas fa-info-circle me-1"></i>
                                Duración estimada en minutos (1-1440)
                            </small>
                        </div>
                    </div>
                </div>

                <!-- Descripción -->
                <div class="form-group">
                    @Html.LabelFor(m => m.Descripcion, new { @class = "form-label" })
                    @Html.TextAreaFor(m => m.Descripcion, new { 
                        @class = "form-control " + (Html.ViewData.ModelState["Descripcion"]?.Errors.Count > 0 ? "is-invalid" : ""),
                        @rows = "4",
                        @placeholder = "Describe detalladamente el servicio, técnicas utilizadas, productos incluidos, etc.",
                        @maxlength = "500"
                    })
                    <div id="descripcion-feedback"></div>
                    @Html.ValidationMessageFor(m => m.Descripcion, "", new { @class = "invalid-feedback" })
                    <small class="form-text text-muted">
                        <i class="fas fa-info-circle me-1"></i>
                        Descripción opcional (máximo 500 caracteres)
                    </small>
                </div>

                <!-- Vista previa del servicio -->
                <div class="card mt-4" style="background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);">
                    <div class="card-header">
                        <h6 class="mb-0">
                            <i class="fas fa-eye me-2"></i>
                            Vista Previa del Servicio
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="service-card" id="preview-card">
                            <div class="service-header">
                                <div class="service-title" id="preview-nombre">Nombre del servicio</div>
                                <div class="service-category" id="preview-tipo">Tipo de servicio</div>
                            </div>
                            <div class="service-body">
                                <div class="service-price" id="preview-precio">$0.00</div>
                                <div class="service-duration" id="preview-duracion">0 minutos</div>
                                <div class="service-description" id="preview-descripcion">
                                    Descripción del servicio aparecerá aquí...
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pie del formulario con botones -->
        <div class="card-footer">
            <div class="btn-toolbar justify-content-between">
                <div class="btn-group">
                    <!-- Botón Guardar - VERDE HERMOSO -->
                    <button type="submit" form="form" class="btn btn-create btn-icon">
                        <i class="fas fa-save"></i>
                        Crear Servicio
                    </button>

                    <!-- Botón Guardar y Crear Otro -->
                    <button type="button" class="btn btn-success btn-icon" onclick="guardarYCrearOtro()">
                        <i class="fas fa-plus-square"></i>
                        Guardar y Crear Otro
                    </button>
                </div>

                <div class="btn-group">
                    <!-- Botón Cancelar - GRIS -->
                    <a href="@Url.Action("Index")" class="btn btn-secondary btn-icon">
                        <i class="fas fa-times"></i>
                        Cancelar
                    </a>

                    <!-- Botón Limpiar Formulario -->
                    <button type="button" class="btn btn-secondary btn-icon" onclick="limpiarFormulario()">
                        <i class="fas fa-eraser"></i>
                        Limpiar
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Tips y consejos -->
    <div class="card mt-4 fade-in">
        <div class="card-header">
            <h6 class="mb-0">
                <i class="fas fa-lightbulb me-2"></i>
                Consejos para crear un buen servicio
            </h6>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <h6><i class="fas fa-check-circle text-success me-2"></i>Nombre descriptivo</h6>
                    <p class="text-muted small">Usa nombres claros que los clientes puedan entender fácilmente.</p>
                    
                    <h6><i class="fas fa-check-circle text-success me-2"></i>Precio competitivo</h6>
                    <p class="text-muted small">Investiga los precios del mercado local para mantenerte competitivo.</p>
                </div>
                <div class="col-md-6">
                    <h6><i class="fas fa-check-circle text-success me-2"></i>Duración realista</h6>
                    <p class="text-muted small">Calcula el tiempo real incluyendo preparación y limpieza.</p>
                    
                    <h6><i class="fas fa-check-circle text-success me-2"></i>Descripción completa</h6>
                    <p class="text-muted small">Detalla qué incluye el servicio para evitar malentendidos.</p>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Formulario oculto para 'Guardar y Crear Otro' -->
<form id="crearOtroForm" method="post" action="@Url.Action("Create")" style="display: none;">
    @Html.AntiForgeryToken()
    <input type="hidden" name="crearOtro" value="true" />
</form>

@section Scripts {
    <script src="~/js/servicios-validation.js"></script>
}