@*
    Archivo: src/PeluqueriaSaaS.Web/Views/Servicios/Index.cshtml
    PropÃ³sito: Vista principal de servicios con filtros - BOTONES HERMOSOS
    Fecha: Julio 2025
*@

@model IEnumerable<PeluqueriaSaaS.Application.DTOs.ServicioListDto>
@{
    ViewData["Title"] = "GestiÃ³n de Servicios";
    var filtroActual = ViewBag.FiltroActual as PeluqueriaSaaS.Application.DTOs.ServicioFiltroDto;
    var tiposServicio = ViewBag.TiposServicio as SelectList;
}

<!-- Header de la pÃ¡gina -->
<div class="page-header">
    <div class="container">
        <h1 class="page-title">
            <i class="fas fa-scissors me-3"></i>
            GestiÃ³n de Servicios
        </h1>
        <p class="page-subtitle">
            Administra los servicios de tu peluquerÃ­a de forma profesional
        </p>
    </div>
</div>

<div class="container">
    <!-- Mensajes de notificaciÃ³n -->
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success fade-in">
            <i class="fas fa-check-circle me-2"></i>
            @TempData["Success"]
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger fade-in">
            <i class="fas fa-exclamation-circle me-2"></i>
            @TempData["Error"]
        </div>
    }

    <!-- Toolbar principal -->
    <div class="btn-toolbar fade-in">
        <div class="d-flex gap-2">
            <!-- BotÃ³n Crear Nuevo Servicio - VERDE HERMOSO -->
            <a href="@Url.Action("Create")" class="btn btn-create btn-icon">
                <i class="fas fa-plus"></i>
                Nuevo Servicio
            </a>

            <!-- BotÃ³n EstadÃ­sticas -->
            <button type="button" class="btn btn-secondary btn-icon" onclick="mostrarEstadisticas()">
                <i class="fas fa-chart-bar"></i>
                EstadÃ­sticas
            </button>
        </div>

        <!-- Contador de servicios -->
        <div class="d-flex align-items-center">
            <span class="badge badge-info">
                Total: @Model.Count() servicios
            </span>
        </div>
    </div>

    <!-- Panel de filtros -->
    <div class="card fade-in">
        <div class="card-header">
            <h5 class="mb-0">
                <i class="fas fa-filter me-2"></i>
                Filtros de BÃºsqueda
            </h5>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Index", "Servicios", FormMethod.Get))
            {
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="form-label">Nombre del Servicio</label>
                            @Html.TextBoxFor(m => filtroActual.Nombre, new { @class = "form-control", @placeholder = "Buscar por nombre..." })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="form-label">Tipo de Servicio</label>
                            @Html.DropDownListFor(m => filtroActual.TipoServicioId, tiposServicio, "-- Todos los tipos --", new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="form-label">Precio MÃ­n.</label>
                            @Html.TextBoxFor(m => filtroActual.PrecioMin, new { @class = "form-control", @type = "number", @step = "0.01", @placeholder = "0.00" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="form-label">Precio MÃ¡x.</label>
                            @Html.TextBoxFor(m => filtroActual.PrecioMax, new { @class = "form-control", @type = "number", @step = "0.01", @placeholder = "9999.99" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <div class="d-flex align-items-center" style="height: 100%;">
                                <div class="form-check">
                                    @Html.CheckBoxFor(m => filtroActual.SoloActivos, new { @class = "form-check-input" })
                                    <label class="form-check-label">Solo Activos</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="btn-group mt-3">
                    <!-- BotÃ³n Buscar - AZUL HERMOSO -->
                    <button type="submit" class="btn btn-primary btn-icon">
                        <i class="fas fa-search"></i>
                        Buscar
                    </button>
                    <!-- BotÃ³n Limpiar -->
                    <a href="@Url.Action("Index")" class="btn btn-secondary btn-icon">
                        <i class="fas fa-times"></i>
                        Limpiar
                    </a>
                </div>
            }
        </div>
    </div>

    <!-- Tabla de servicios -->
    <div class="table-container fade-in">
        @if (Model.Any())
        {
            <table class="table">
                <thead>
                    <tr>
                        <th><i class="fas fa-tag me-1"></i>Nombre</th>
                        <th><i class="fas fa-list me-1"></i>Tipo</th>
                        <th><i class="fas fa-dollar-sign me-1"></i>Precio</th>
                        <th><i class="fas fa-clock me-1"></i>DuraciÃ³n</th>
                        <th><i class="fas fa-toggle-on me-1"></i>Estado</th>
                        <th class="text-center"><i class="fas fa-cogs me-1"></i>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var servicio in Model)
                    {
                        <tr>
                            <td>
                                <strong>@servicio.Nombre</strong>
                            </td>
                            <td>
                                <span class="badge badge-info">
                                    @servicio.TipoServicioNombre
                                </span>
                            </td>
                            <td>
                                <strong class="text-success">@servicio.PrecioFormateado</strong>
                            </td>
                            <td>
                                @servicio.DuracionFormateada
                            </td>
                            <td>
                                <span class="badge @servicio.EstadoCssClass">
                                    @(servicio.EsActivo ? "Activo" : "Inactivo")
                                </span>
                            </td>
                            <td>
                                <div class="btn-group justify-content-center">
                                    <!-- BotÃ³n Ver Detalles - AZUL HERMOSO -->
                                    <a href="@Url.Action("Details", new { id = servicio.Id })" 
                                       class="btn btn-view btn-sm btn-icon" 
                                       title="Ver detalles">
                                        <i class="fas fa-eye"></i>
                                    </a>

                                    <!-- BotÃ³n Editar - NARANJA HERMOSO -->
                                    <a href="@Url.Action("Edit", new { id = servicio.Id })" 
                                       class="btn btn-edit btn-sm btn-icon" 
                                       title="Editar servicio">
                                        <i class="fas fa-edit"></i>
                                    </a>

                                    <!-- BotÃ³n Cambiar Estado -->
                                    @if (servicio.EsActivo)
                                    {
                                        <button type="button" 
                                                class="btn btn-warning btn-sm btn-icon" 
                                                onclick="cambiarEstado('@servicio.Id', false, '@servicio.Nombre')" 
                                                title="Desactivar servicio">
                                            <i class="fas fa-pause"></i>
                                        </button>
                                    }
                                    else
                                    {
                                        <button type="button" 
                                                class="btn btn-success btn-sm btn-icon" 
                                                onclick="cambiarEstado('@servicio.Id', true, '@servicio.Nombre')" 
                                                title="Activar servicio">
                                            <i class="fas fa-play"></i>
                                        </button>
                                    }

                                    <!-- BotÃ³n Eliminar - ROJO HERMOSO -->
                                    <a href="@Url.Action("Delete", new { id = servicio.Id })" 
                                       class="btn btn-delete btn-sm btn-icon" 
                                       title="Eliminar servicio">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="card-body text-center">
                <div class="py-5">
                    <i class="fas fa-search fa-3x text-muted mb-3"></i>
                    <h4 class="text-muted">No se encontraron servicios</h4>
                    <p class="text-muted">
                        @if (filtroActual?.TieneFiltros == true)
                        {
                            <span>No hay servicios que coincidan con los filtros aplicados.</span>
                            <br>
                            <a href="@Url.Action("Index")" class="btn btn-secondary btn-sm mt-2">
                                <i class="fas fa-times me-1"></i>
                                Limpiar filtros
                            </a>
                        }
                        else
                        {
                            <span>AÃºn no has creado ningÃºn servicio.</span>
                            <br>
                            <a href="@Url.Action("Create")" class="btn btn-create btn-sm mt-2">
                                <i class="fas fa-plus me-1"></i>
                                Crear primer servicio
                            </a>
                        }
                    </p>
                </div>
            </div>
        }
    </div>
</div>

<!-- Modal para mostrar estadÃ­sticas -->
<div class="modal fade" id="estadisticasModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-chart-bar me-2"></i>
                    EstadÃ­sticas de Servicios
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="estadisticasContent">
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Cargando...</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Formulario oculto para cambiar estado -->
<form id="cambiarEstadoForm" method="post" style="display: none;">
    @Html.AntiForgeryToken()
</form>

@section Scripts {
    <script>
        // Función para cambiar estado de servicio con AJAX moderno
function cambiarEstado(servicioId, activar, nombreServicio) {
    const accion = activar ? 'activar' : 'desactivar';
    const mensaje = `¿Estás seguro de que deseas ${accion} el servicio "${nombreServicio}"?`;
    
    if (confirm(mensaje)) {
        // Obtener el token antiforgery
        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
        
        // Hacer petición AJAX con fetch moderno
        fetch('@Url.Action("CambiarEstado")' + '/' + servicioId, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'RequestVerificationToken': token
            },
            body: 'activar=' + activar + '&__RequestVerificationToken=' + token
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Buscar el botón que hizo click por servicioId
                const botones = document.querySelectorAll('button[onclick*="' + servicioId + '"]');
                const botonActual = Array.from(botones).find(btn => btn.onclick.toString().includes('cambiarEstado'));
                
                if (botonActual) {
                    // Encontrar la fila (tr) que contiene este botón
                    const fila = botonActual.closest('tr');
                    
                    // Actualizar badge de estado en la columna Estado
                    const badge = fila.querySelector('td:nth-child(5) .badge');
                    if (badge) {
                        if (data.nuevoEstado) {
                            badge.textContent = 'Activo';
                            badge.className = 'badge badge-success';
                        } else {
                            badge.textContent = 'Inactivo';
                            badge.className = 'badge badge-danger';
                        }
                    }
                    
                    // Actualizar el botón actual
                    if (data.nuevoEstado) {
                        // Ahora está ACTIVO -> mostrar botón DESACTIVAR
                        botonActual.className = 'btn btn-warning btn-sm btn-icon';
                        botonActual.innerHTML = '<i class="fas fa-pause"></i>';
                        botonActual.title = 'Desactivar servicio';
                        botonActual.onclick = function() { cambiarEstado(servicioId, false, nombreServicio); };
                    } else {
                        // Ahora está INACTIVO -> mostrar botón ACTIVAR  
                        botonActual.className = 'btn btn-success btn-sm btn-icon';
                        botonActual.innerHTML = '<i class="fas fa-play"></i>';
                        botonActual.title = 'Activar servicio';
                        botonActual.onclick = function() { cambiarEstado(servicioId, true, nombreServicio); };
                    }
                }
                
                // Mostrar mensaje de éxito
                alert('Servicio "' + nombreServicio + '" ' + (data.nuevoEstado ? 'activado' : 'desactivado') + ' correctamente.');
            } else {
                alert('Error al cambiar el estado del servicio.');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error de conexión al cambiar el estado.');
        });
    }
}

        // FunciÃ³n para mostrar estadÃ­sticas
        async function mostrarEstadisticas() {
            const modal = new bootstrap.Modal(document.getElementById('estadisticasModal'));
            modal.show();

            try {
                const response = await fetch('@Url.Action("Estadisticas")');
                const data = await response.json();
                
                document.getElementById('estadisticasContent').innerHTML = `
                    <div class="row">
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-body text-center">
                                    <h4 class="text-primary">${data.totalServicios}</h4>
                                    <p>Total Servicios</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-body text-center">
                                    <h4 class="text-success">${data.serviciosActivos}</h4>
                                    <p>Servicios Activos</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-body text-center">
                                    <h4 class="text-warning">$${data.precioPromedio}</h4>
                                    <p>Precio Promedio</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-body text-center">
                                    <h4 class="text-info">${data.duracionPromedio} min</h4>
                                    <p>DuraciÃ³n Promedio</p>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            } catch (error) {
                document.getElementById('estadisticasContent').innerHTML = `
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        Error al cargar estadÃ­sticas
                    </div>
                `;
            }
        }
    </script>
}