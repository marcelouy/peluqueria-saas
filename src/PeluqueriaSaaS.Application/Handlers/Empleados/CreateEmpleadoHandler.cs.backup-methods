using MediatR;
using PeluqueriaSaaS.Application.Commands.Empleados;
using PeluqueriaSaaS.Domain.Entities;
using PeluqueriaSaaS.Domain.Interfaces;

namespace PeluqueriaSaaS.Application.Handlers.Empleados
{
    public class CreateEmpleadoHandler : IRequestHandler<CreateEmpleadoCommand, Empleado>
    {
        private readonly IEmpleadoRepository _repository;

        public CreateEmpleadoHandler(IEmpleadoRepository repository)
        {
            _repository = repository;
        }

        public async Task<Empleado> Handle(CreateEmpleadoCommand request, CancellationToken cancellationToken)
        {
            var empleado = new Empleado
            {
                Nombre = request.Nombre,
                Apellido = request.Apellido,
                Email = request.Email,
                Telefono = request.Telefono,
                FechaNacimiento = request.FechaNacimiento,
                Cargo = request.Cargo,
                Salario = request.Salario,
                FechaContratacion = request.FechaContratacion,
                Horario = request.Horario,
                Direccion = request.Direccion,
                Ciudad = request.Ciudad,
                CodigoPostal = request.CodigoPostal,
                Notas = request.Notas,
                EsActivo = request.EsActivo,
                FechaRegistro = DateTime.Now
            };

            return await _repository.CreateAsync(empleado);
        }
    }
}
